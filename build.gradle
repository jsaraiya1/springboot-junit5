buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
		artifactoryUrl = 'https://artifactory.allstate.com/artifactory/libs-release'
		artifactoryReleaseUrl = 'https://artifactory.allstate.com/artifactory/libs-release-local'
	}
	repositories {
		//mavenCentral()
		maven { url artifactoryUrl }
		//maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC3'
	}
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.0'
ext.junitPlatformVersion = '1.0.0'
ext.junitJupiterVersion  = '5.0.0'
ext.log4jVersion         = '2.6.2'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {

	maven { url artifactoryUrl }

}

junitPlatform {
	// platformVersion '1.0.0'
	filters {
		engines {
			// include 'junit-jupiter', 'junit-vintage'
			// exclude 'custom-engine'
		}
		tags {
			// include 'fast'
			exclude 'slow'
		}
		// includeClassNamePattern '.*Test'
	}
	// configurationParameter 'junit.jupiter.conditions.deactivate', '*'
	// enableStandardTestTask true
	// reportsDir file('build/test-results/junit-platform') // this is the default
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	// If you also want to support JUnit 3 and JUnit 4 tests
	testCompile("junit:junit:${junit4Version}")
	//testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

	// Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
	testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}
